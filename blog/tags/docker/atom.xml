<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: docker | なんでもやってみるのが良いと思う]]></title>
  <link href="http://stepxstep.org/blog/tags/docker/atom.xml" rel="self"/>
  <link href="http://stepxstep.org/"/>
  <updated>2016-03-27T09:51:10+09:00</updated>
  <id>http://stepxstep.org/</id>
  <author>
    <name><![CDATA[H.Tokida]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[1分でDocker環境を構築する Docker on DigitalOcean]]></title>
    <link href="http://stepxstep.org/blog/2014/08/09/firstdocker/"/>
    <updated>2014-08-09T23:49:00+09:00</updated>
    <id>http://stepxstep.org/blog/2014/08/09/firstdocker</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#docker">素早くDocker環境を用意する</a></li>
  <li><a href="#section">はじめに</a></li>
  <li><a href="#section-1">使い方</a></li>
  <li><a href="#section-2">まとめ</a></li>
</ul>

<h1 id="docker">素早くDocker環境を用意する</h1>

<p>普段から検証で利用したりしているクラウドのサービスに DigitalOcean というサービスがあります。
格安のSSD VPSとして有名ですが確かに安い、そして「早い」です。代替最小の構成で1〜2分でプロビジョニングされます。</p>

<ul>
  <li><a href="https://www.digitalocean.com/pricing/">費用</a></li>
</ul>

<p>みてもらうとわかりますが、最小モデル(512M Memory, 1Core , 2OG SSD)で $0.007/hr($5/month) です。HighPerformanceの最小構成(16GB Memory,8Core,160GB SSD)で $0.238/hr($160/mo) となっています。さっと検証をしたい程度1日程度であれば非常に安く利用することが出来ます。</p>

<h1 id="section">はじめに</h1>

<p>現在(2014/08/09)、$10分のクーポンがあるので更に利用が便利になります。すでにアカウントがある人はポータル画面の左メニュー<code>Billing</code>から右上の<code>Manage Payment</code>を選択ししたの<code>Promo Code</code>に入力をします。</p>

<ul>
  <li>CODE:<code>SHIPITFAST10</code></li>
</ul>

<p>もしアカウントがまだの場合には、こちらのリンクからはじめてもらえると私が嬉しいです。</p>

<ul>
  <li><a href="https://www.digitalocean.com/?refcode=fb56d3391881">DigitalOcean</a></li>
</ul>

<h1 id="section-1">使い方</h1>

<p>ポータルから作るのは非常に簡単ですが実際にDocker利用したいと思うとコマンドラインからすると思われるのでここではVagrantを利用してサーバのデプロイをしたいと思います。</p>

<ul>
  <li><a href="https://github.com/smdahlen/vagrant-digitalocean">smdahlen/vagrant-digitalocean</a></li>
</ul>

<p>すでにVagrantの環境は入っているものとします。（まだの方は色々ぐぐってみてください）
以前に入れたままの人はバージョンアップがされているので実行しておきましょう。</p>

<p>古いバージョンではUsername,APIキーと言う形式でしたが現在はToken形式で利用することになります。ポータルからトークンは発行することが出来ます。</p>

<p>$ vagrant plugin install vagrant-digitalocean</p>

<p>実際のVagrantfileのサンプルを以下に載せておきます。</p>

<p><figure class='code'><figcaption><span>Vagrantfile </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='docker'><span class='line'><span class="c"># -&lt;em&gt;- mode: ruby -&lt;/em&gt;-</span>
</span><span class='line'><span class="c"># vi: set ft=ruby :</span>
</span><span class='line'><span class="c"># vagrant up –provider=digital_ocean –provision&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Vagrant.configure<span class="o">(</span>‘2’<span class="o">)</span> <span class="k">do</span> <span class="p">|</span>config<span class="p">|</span>
</span><span class='line'>  config.vm.hostname              <span class="o">=</span> ‘docker01’&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;config.vm.provider :digital_ocean <span class="k">do</span> <span class="p">|</span>provider, override<span class="p">|</span>
</span><span class='line'>    override.ssh.private_key_path <span class="o">=</span> ‘~/.ssh/admin’
</span><span class='line'>    override.vm.box               <span class="o">=</span> ‘digital_ocean’
</span><span class='line'>    override.vm.box_url           <span class="o">=</span> “https://github.com/smdahlen/vagrant-digitalocean/raw/master/box/digital_ocean.box”
</span><span class='line'>    provider.token                <span class="o">=</span> ‘TOKEN’
</span><span class='line'>    provider.image                <span class="o">=</span> ‘Docker 1.1.2 on Ubuntu 14.04’
</span><span class='line'>    provider.region               <span class="o">=</span> ‘LON1’
</span><span class='line'>    provider.size                 <span class="o">=</span> ‘512MB’
</span><span class='line'>    provider.ca_path              <span class="o">=</span> ‘/usr/local/opt/curl-ca-bundle/share/ca-bundle.crt’
</span><span class='line'>    provider.ssh_key_name         <span class="o">=</span> ‘admin’
</span><span class='line'>  end&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;end
</span></code></pre></td></tr></table></div></figure></p>

<p>1分で起動が売りなのですが上記の設定で「<code>46秒！</code>」で起動してきます（ポータル上に表示されている時間）
起動は普段通り、<code>$ vagrant up --provider=digital_ocean --provision</code> で行うことが出来ます。</p>

<p>接続して確認してみます。</p>

<pre><code>$ vagrant ssh
Welcome to Ubuntu 14.04.1 LTS (GNU/Linux 3.13.0-24-generic x86_64)

* Documentation:  https://help.ubuntu.com/

System information as of Sat Aug  9 16:55:12 EDT 2014

System load:  0.2               Processes:              76
Usage of /:   8.0% of 19.56GB   Users logged in:        0
Memory usage: 13%               IP address for eth0:    178.62.17.227
Swap usage:   0%                IP address for docker0: 172.17.42.1

Graph this data and manage this system at:
  https://landscape.canonical.com/

Last login: Tue Aug  5 15:18:31 2014 from 162.243.14.86
root@docker01:~# docker version
Client version: 1.1.2
Client API version: 1.13
Go version (client): go1.2.1
Git commit (client): d84a070
Server version: 1.1.2
Server API version: 1.13
Go version (server): go1.2.1
Git commit (server): d84a070
</code></pre>

<p>Dockerが動いている状態になっていますね！</p>

<h1 id="section-2">まとめ</h1>

<p>というわけでわずか1分で環境が用意することが出来ました。
実際に利用してみると便利さがわかります。開発環境で使う分には十分ですね。というかローカルの環境でVirtualBoxで起動する時間以下でネット上にサーバが構築されるとか結構感動です。</p>

<p>プライベートレポジトリを併用して使えば必要なときに使うという使い方が出来て非常に便利です。Vagrant経由で実行することでAnsibleなどを併用すればその辺りもある程度自動化出来ますね。</p>

]]></content>
  </entry>
  
</feed>
