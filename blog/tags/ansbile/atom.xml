<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: ansbile | なんでもやってみるのが良いと思う]]></title>
  <link href="http://stepxstep.org/blog/tags/ansbile/atom.xml" rel="self"/>
  <link href="http://stepxstep.org/"/>
  <updated>2014-11-04T02:07:41+09:00</updated>
  <id>http://stepxstep.org/</id>
  <author>
    <name><![CDATA[H.Tokida]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ansible 1.7 External Inventory SoftLayerを試してみる]]></title>
    <link href="http://stepxstep.org/blog/2014/08/09/ansible-softlayer/"/>
    <updated>2014-08-09T02:17:00+09:00</updated>
    <id>http://stepxstep.org/blog/2014/08/09/ansible-softlayer</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section">何が出来るの？</a></li>
  <li><a href="#section-1">準備</a></li>
  <li><a href="#section-2">プラグインの実行</a></li>
  <li><a href="#section-3">使ってみる</a>    <ul>
      <li><a href="#tips">Tips</a></li>
    </ul>
  </li>
  <li><a href="#section-4">まとめ</a></li>
</ul>

<h1 id="section">何が出来るの？</h1>

<p>Ansible 1.7 より 外部インベントリ（Dynamic Inventory）に SoftLayerのプラグインがCommitされていました。外部インベントリとして利用できるため Ansible の hosts を記載しなくても動的に SoftLayerの管理ポータル上からサーバのリスト等が取得できるはずです。どのような感じで利用できるのか試してみます。</p>

<h1 id="section-1">準備</h1>

<p>古いバージョンの場合には Ansible 1.7 にアップデートします。今回はUbuntu上の環境でpipで過去のバージョンを導入している場合です。</p>

<p><code>
$ sudo pip install ansible --upgrade
</code></p>

<p>不勉強なので分かっていないですが pip で入れると pluginが入らないので（何かどこかに入るのかもしれませんが）自分でダウンロードしておきます。</p>

<p><code>
$ git clone https://github.com/ansible/ansible.git
$ cd ansible/plugins/inventory
$ ls -l softlayer.py
-rwxrwxr-x 1 vagrant vagrant 6112 Aug  8 03:03 softlayer.py
</code></p>

<p>また、SoftLayer CLIが利用可能になっている必要があるので導入をしておきます。</p>

<p><code>
$ sudo pip install softlayer
$ sl config setup
</code></p>

<p>SoftLayerの管理ポータルから、USER名、APIキーを控えておきセットアップします。slコマンドが利用できるようになっている必要があります。</p>

<h1 id="section-2">プラグインの実行</h1>

<p>プラグインを単体で実行してみます。</p>

<p><code>
$ ./softlayer.py --list
{
  "_meta": {
    "hostvars": {
      "119.81.131.10": {
        "datacenter": {
          "id": 352494,
          "longName": "Hong Kong 2",
          "name": "hkg02"
        },
        "domain": "niandc.co.jp",
        "fullyQualifiedDomainName": "kensyu05.niandc.co.jp",
        "globalIdentifier": "461a86f4-3e4f-4b78-90df-9207d2337ee4",
        "hostname": "kensyu05",
        "id": 5509848,
        "maxCpu": 1,
        "maxMemory": 1024,
        "powerState": {
          "keyName": "RUNNING",
          "name": "Running"
        },
        "primaryBackendIpAddress": "10.x.x.x",
        "primaryIpAddress": "119.81.x.x",
        "status": {
          "keyName": "ACTIVE",
          "name": "Active"
        }
      },
</code></p>

<p>という形でホストの情報が出てくるとともに以下のグルーピングでもJSONが返ってきています。</p>

<ul>
  <li>cpu_“数”</li>
  <li>datacenter_“DC名”</li>
  <li>“HOSTNAME”</li>
  <li>“HOSTNAME”.”DOMAINNAME”&gt;</li>
  <li>hardware</li>
  <li>virtual</li>
  <li>memory_“サイズ”</li>
  <li>“DOMAINNAME”</li>
</ul>

<p>などです。これらはいずれも</p>

<p><code>
 "datacenter_sng01": [
    "119.81.xx.x",
    "119.81.xx.x",
    "119.81.xx.x",
    "119.81.xx.x"
  ],
</code></p>

<p>のような形でIPアドレスが応答されます。</p>

<h1 id="section-3">使ってみる</h1>

<p>先ほどのJSON形式が渡されるためどうもIPアドレスで sshの設定が必要になりそうです。したがって ~/.ssh/confg内にてIPアドレスでログイン出来るように設定しておきます。パスワードありで接続する場合、<code>-k</code>または<code>--ask-pass --ask-sudo-pass</code>などを引数につけます。</p>

<p><code>
ansible -i `pwd`/softlayer.py docker02 -u root -m ping -k
SSH password:
119.81.x.x | success &gt;&gt; {
    "changed": false,
    "ping": "pong"
}
</code></p>

<p>このようにPingが実行できました。同様に <code>all</code> や <code>datacenter_hkg02</code> 等の括りで制御する事が出来ます。</p>

<h2 id="tips">Tips</h2>

<p>常にこの <code>softlayer.py</code> を指定するには</p>

<ul>
  <li>softlayer.py を <code>/etc/ansible/hosts</code>に上書き</li>
  <li>環境変数ANSIBLE_HOSTSに softlayer.py を指定</li>
</ul>

<p>の2通りの方法があります。</p>

<h1 id="section-4">まとめ</h1>

<p>台数が多くなると便利な Ansible の External Inventory ですが、SoftLayerのプラグインが出ていることでより簡単に利用することが出来るように成りました。 データセンター単位やドメイン単位で変更が発生する際などは特に便利そうですね。</p>

]]></content>
  </entry>
  
</feed>
